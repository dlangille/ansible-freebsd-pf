---

# sshguard
- name: "rcconf: Check if sshguard is installed"
  stat:
    path: "/usr/local/etc/rc.d/sshguard"
  register: service_status
  tags: pf_rcconf_sshguard

- name: "rcconf: Enable and start sshguard"
  lineinfile:
    dest: "/etc/rc.conf"
    regexp: "^sshguard_enable"
    line: "sshguard_enable=\"YES\""
    backup: yes
  notify: enable and start sshguard
  when:
    - sshguard_enable
    - service_status.stat.exists
  tags: pf_rcconf_sshguard
  
- name: "rcconf: Disable and stop sshguard"
  lineinfile:
    dest: "/etc/rc.conf"
    regexp: "^sshguard_enable"
    line: "sshguard_enable=\"NO\""
    backup: yes
  notify: disable and stop sshguard
  when:
    - not sshguard_enable
    - service_status.stat.exists
  tags: pf_rcconf_sshguard

# pf
- name: "rcconf: Enable and start pf"
  lineinfile:
    dest: "/etc/rc.conf"
    regexp: "^pf_enable"
    line: "pf_enable=\"YES\""
    backup: yes
  notify: start pf
  when: pf_enable
  tags: pf_rcconf_pf
  
- name: "rcconf: Disable and stop pf"
  lineinfile:
    dest: "/etc/rc.conf"
    regexp: "^pf_enable"
    line: "pf_enable=\"NO\""
    backup: yes
  notify: disable and stop pf
  when: not pf_enable
  tags: pf_rcconf_pf
  
- name: "rcconf: Configure pf"
  lineinfile:
    dest: "/etc/rc.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: yes
  with_items:
    - { regexp: "^pf_rules", line: "pf_rules=\"{{ pf_rules }}\""}
    - { regexp: "^pf_flags", line: "pf_flags=\"{{ pf_flags }}\""}
  notify: reload pf
  tags: pf_rcconf_pf

# pflog
- name: "rcconf: Enable and start pflog"
  lineinfile:
    dest: "/etc/rc.conf"
    regexp: "^pflog_enable"
    line: "pflog_enable=\"YES\""
    backup: yes
  notify: enable and start pflog
  when: pflog_enable
  tags: pf_rcconf_pflog
  
- name: "rcconf: Disable and stop pflog"
  lineinfile:
    dest: "/etc/rc.conf"
    regexp: "^pflog_enable"
    line: "pflog_enable=\"NO\""
    backup: yes
  notify: disable and stop pflog
  when: not pflog_enable
  tags: pf_rcconf_pflog

- name: "rcconf: Configure pflog"
  lineinfile:
    dest: "/etc/rc.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: yes
  with_items:
    - { regexp: "^pflog_logfile", line: "pflog_logfile=\"{{ pflog_logfile }}\""}
    - { regexp: "^pflog_flags", line: "pflog_flags=\"{{ pflog_flags }}\""}
  notify: reload pflog
  tags: pf_rcconf_pflog

# blacklistd
- name: "rcconf: Enable and start blacklistd"
  lineinfile:
    dest: "/etc/rc.conf"
    regexp: "^blacklistd_enable"
    line: "blacklistd_enable=\"YES\""
    backup: yes
  notify:
    - enable and start blacklistd
    - reload pf
  when: pf_blacklistd_enable
  tags: pf_rcconf_blacklistd

- name: "rcconf: Disable and stop blacklistd"
  lineinfile:
    dest: "/etc/rc.conf"
    regexp: "^blacklistd_enable"
    line: "blacklistd_enable=\"NO\""
    backup: yes
  notify:
    - disable and stop blacklistd
    - reload pf
  when: not pf_blacklistd_enable
  tags: pf_rcconf_blacklistd

- name: "rcconf: Configure blacklistd"
  lineinfile:
    dest: "/etc/rc.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: yes
  with_items:
    - { regexp: "^blacklistd_flags", line: "blacklistd_flags=\"{{ pf_blacklistd_flags }}\""}
  notify: restart blacklistd
  tags: pf_rcconf_blacklistd

# EOF
...
